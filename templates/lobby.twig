<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8"/>
        <title>Dario Battle : Lobby</title>
        <link rel="stylesheet" href="css/style.css" />
  </head>
  <body>
      <h1 style="text-align:center">Lobby</h1>
      <h3>Compte : {{nom}}</h3>
      
      <p><h2>Joueurs en ligne</h2>
    <table id = "onlinePlayers">
        <th>Joueur </th>
            {% for pseudo in joueursDispo %}
            {% if (pseudo != nom) %}
                    <tr>
                        <td class="nomJoueur">{{pseudo}}</td> 
                    </tr>
            {% endif %}
            {% endfor %}
    </table></p>
    <div id="menu"> 
    
    </div>
    <div id ="msgbox">
        <h2>Discussion</h2>
    </div>
    <div id="gameInvitationWindow">
        
    </div>
      <p><a id="play" href="/playdario">Lancer une partie !</a></p>
      <p><a href="/userlist">Retour à l'accueil</a></p>
      
      
    <script src="/socket.io/socket.io.js"></script>
    <script>
        // Connexion avec le serveur Socket.IO
        var socket = io();
        var playerLogin = '{{nom}}'
        // Tableau qui aura en première case le pseudo du joueur ciblé par le clic
        var nameTarget = [];
        /* Variable du cadre des joueurs disponible */
        var zoneJoueurs = document.getElementById('onlinePlayers');
        var players = zoneJoueurs.getElementsByTagName('td');
        var addPlayer = true;
        /* Variables du menu d'intéractions entre joueurs */
        var menuInteractions = document.getElementById('menu');
        var ul = document.createElement("ul");
        var li = document.createElement("li");
        var li2 = document.createElement("li");
        li.classList.add("choixMenu"); 
        li2.classList.add("choixMenu");
        ul.classList.add('choixMenu');
        var choix1 = document.createTextNode("Envoyer un message");
        var choix2 = document.createTextNode("Inviter à jouer");
        menuInteractions.appendChild(ul);
        ul.appendChild(li);
        ul.appendChild(li2);
        li.appendChild(choix1);
        li2.appendChild(choix2);
        menuInteractions.style.visibility = "hidden";
        var interactions = menuInteractions.getElementsByTagName('li');
        /* Variables de la fenêtre d'invitation à la partie */
        var gameInvitationWindow = document.getElementById('gameInvitationWindow');
        gameInvitationWindow.style.visibility = "hidden";
        var buttonAccept = document.createElement('button');
        var buttonDecline = document.createElement('button');
        

        function afficheElement(element) {
            element.style.visibility = "visible";
        }
        
        function hideElement(element) {
            element.style.visibility = "hidden";
        }
        
        
        /* Fonction qui va être utilisée deux fois : une fois dans l'évènement
        *  newPlayerAvailable pour pouvoir cliquer sur les joueurs qui sont
        *  ajoutés à la volée et une autre fois pour pouvoir cliquer
        *  sur les joueurs qui sont affichés via la boucle twig */
        function getPseudo(target) {
            var source = playerLogin; 
            // On stocke le nom du joueur cliqué dans le tableau
            nameTarget[0] = this.textContent;
            var target = nameTarget[0];
            console.log('Cible du clic ' + nameTarget[0]);
            // On affiche le menu lorsque un clic est fait sur un joueur
            // On notifie le serveur quel joueur a cliqué sur qui
            socket.emit('clickOnPlayer', source, target);
            afficheElement(menuInteractions);
        }
        
        /* Fonction qui permet de récupérér la chaîne de caractère
        *  qui contient l'intéraction cliquée par le joueur */
        function getInteraction() {
            var source = playerLogin;
            var interaction = this.textContent;
            var target = nameTarget[0];
            console.log(interaction);
            socket.emit('clickOnInteraction', source, interaction, target);
            hideElement(menuInteractions);
        }
        
        // Signale au serveur qu'un joueur vient de se connecter au lobby
        socket.emit('lobbyConnection', playerLogin);
        
        // Lorsque un nouveau joueur se connecte on l'ajoute
        // à la liste des joueurs disponible sans rafraichir la page
        socket.on('newPlayerAvailable', function(pseudo) {
            
            // On vérifie que le joueur n'existe pas déjà dans la liste
            for(var i = 0; i < players.length; i++) {
                if (players[i].textContent == pseudo) {
                    addPlayer = false;
                }
            }
            
            // Si le joueur n'est pas déjà présent dans la liste on l'ajoute
            if (addPlayer) {
                /* Création des variables pour ajouter à la volée 
                les nouveaux membres qui se connectent */
                var tr = document.createElement("tr");
                var td = document.createElement("td");
                td.classList.add("nomJoueur");
                var playerName = document.createTextNode(pseudo);
                tr.appendChild(td);
                td.appendChild(playerName);
                zoneJoueurs.appendChild(tr);
            }
            
            // Récupérer le pseudo sur lequel l'utilisateur a cliqué
            // lorsque celui-ci vient d'être ajouté à la volée
            // et affichage du menu contextuel
            for(var i = 0; i < players.length; i++) {
                players[i].addEventListener('click', getPseudo);
            }
        
        });
        
        
        // Récupération du pseudo sur lequel l'utilisateur a cliqué
        // lorsque les utilisateurs étaient déjà connectés
        // et affichage du menu contextuel
        for(var i = 0; i < players.length; i++) {
            players[i].addEventListener('click', getPseudo);
        }
        
        // Récupération de l'intéraction sur laquelle le joueur a cliqué
        for(i = 0; i < interactions.length; i++) {
            interactions[i].addEventListener('click', getInteraction);
        }
        
        /* Si on reçoit un message on l'affiche dans la discussion */
        socket.on('sendMsg', function (message) {
            console.log('EVENEMENT SENDMSG');
            var box = document.getElementById('msgbox');
            var p = document.createElement('p');
            box.appendChild(p);
            p.textContent = message;
            console.log('--- Message reçu --- ' + message);
        });
        
        /* Si on est invité à jouer on affiche la fenêtre d'invitation */
        socket.on('invitedToGame', function(source, message) {
            var context = document.createTextNode('Le joueur ' + source + ' ' + message);
            var br = document.createElement('br');
            buttonAccept.textContent = 'Accepter';
            buttonDecline.textContent = 'Refuser';
            gameInvitationWindow.appendChild(context);
            gameInvitationWindow.appendChild(br);
            gameInvitationWindow.appendChild(buttonAccept);
            gameInvitationWindow.appendChild(buttonDecline);
            // On affiche la fenêtre d'invitation
            afficheElement(gameInvitationWindow);
            // Si le joueur accepte l'invitation
            buttonAccept.addEventListener('click', function() {
                socket.emit('acceptInvitation', 'J\'accepte');
                // Problème dans la console avec removeChild
                gameInvitationWindow.removeChild(context);
                hideElement(gameInvitationWindow);
            })
            // Si le joueur refuse l'invitation
            buttonDecline.addEventListener('click', function() {
                socket.emit('declineInvitation', 'Je veux pas jouer avec toi !');
                // Problème dans la console avec removeChild
                gameInvitationWindow.removeChild(context);
                hideElement(gameInvitationWindow);
            })
        });

    </script>

      
  </body>
</html>